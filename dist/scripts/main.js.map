{"version":3,"sources":["../assets/scripts/main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n * Modified by Stamat <stamatmail@gmail.com>\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n * ======================================================================== */\n\n(function($) {\n\n  // Use this variable to set up the common and page specific functions. If you\n  // rename this variable, you will also need to rename the namespace below.\n  var boilerwise = {\n    // All pages\n    init: function() {\n      // JavaScript to be fired on all pages\n    },\n    finalize: function(a, b, c) {\n      // JavaScript to be fired on all pages, after page specific JS after everything else was executed\n    },\n    // Home page\n    'home': function() {\n        // JavaScript to be fired on the home page\n    },\n    // About us page, note the change from about-us to about_us.\n    'about_us': function() {\n        // JavaScript to be fired on the about us page\n    }\n  };\n\n  // The routing fires all common scripts, followed by the page specific scripts.\n  // Add additional events for more control over timing e.g. a finalize event\n  var UTIL = {};\n  \n  UTIL.namespace = boilerwise;\n  \n  // Parses arguments in body's attribute data-args that are passed to the functions\n  // Arguments are coma sepparated like in array without the need to begin and end with []\n  UTIL.argsParse = function(args) {\n    if (!args || args.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '') === '') {\n      return [];\n    }\n    \n    if (!args.match(/^\\[/gmi)) {\n      args = '[' + args;\n    }\n    \n    if (!args.match(/$\\]/gmi)) {\n      args = args + ']';\n    }\n    \n    args = '{ \"arr\": ' + args + '}';\n    \n    try {\n      args = JSON.parse(args);\n    } catch(e) {\n      if (window.console && window.console.error) {\n        console.error(e);\n      }\n      return [];\n    }\n    \n    return args.arr;\n  };\n  \n  UTIL.fire = function(func, args) {\n    var namespace = UTIL.namespace;\n    \n    if (func !== '' &&\n        namespace[func] &&\n        typeof namespace[func] === 'function') {\n      \n      namespace[func].apply(null, args);\n    }\n  };\n  \n  UTIL.loadEvents= function() {\n    var body = document.body;\n    var args = UTIL.argsParse($(body).data('args'));\n    \n    // Fire common init JS\n    UTIL.fire('init', args);\n    \n    // Fire page-specific init JS, and then finalize JS\n    $.each(body.className.split(/\\s+/), function(i, classnm) {\n      //todo: get data args\n      \n      UTIL.fire(classnm.replace(/-/g, '_'), args);\n    });\n\n    // Fire common finalize JS\n    UTIL.fire('finalize', args);\n  };\n\n  // Load Events\n  $(document).ready(UTIL.loadEvents);\n\n})(jQuery); // Fully reference jQuery after this point.\n"],"sourceRoot":"assets/scripts/"}