@mixin retina ($filename, $size, $ext: png) {
    background-image: url("../images/#{$filename}.#{$ext}");
    background-size: $size;

    @media only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 1.3 / 1), only screen and (min-resolution: 125dpi), only screen and (min-resolution: 1.3dppx) {
        background-image: url("../images/#{$filename}@2x.#{$ext}");
    }
}

@mixin bg ($filename, $ext: png) {
    background-image: url("../images/#{$filename}.#{$ext}");
}

@mixin icon ($filename, $w, $h, $ext: png) {
    background-image: url("../images/#{$filename}.#{$ext}");
    background-size: $w $h;
    background-position: center center;
    background-repeat: no-repeat;
    display: inline-block;
    width: $w;
    height: $h;
    line-height: $h;
    vertical-align: middle;
    margin-top: -3px;

    @media only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 1.3 / 1), only screen and (min-resolution: 125dpi), only screen and (min-resolution: 1.3dppx) {
        background-image: url("../images/#{$filename}@2x.#{$ext}");
    }
}

@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

@mixin media($query) {
    @media screen and ($query) {
      @content;
    }
}

@function new-breakpoint($query: $feature $value) {
  @if length($query) == 1 {
    $v: nth($query, 1);
    $query: "min-width: #{$v}";
  } @else {
    $f: nth($query, 1);
    $v: nth($query, 2);
    $query: "#{$f}: #{$v}";
  }

  @return $query;
}
